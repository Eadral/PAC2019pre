<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:double="http://www.intel.com/2001/XMLSchema#double" xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal>
  <name>%BasicHotspotsAtypeName</name>
  <shortName>%BasicHotspotsAtypeShortName</shortName>
  <description>%BasicHotspotsAtypeDescription</description>
  <abbreviation>hs</abbreviation>
  <alias>hotspots</alias>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">configs.analysis_type-hotspots_f1101</property>
 </internal>
 <prerequisites xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:if test="exsl:ctx('targetOS', '') = 'MacOSX'">
   <xsl:value-of select="exsl:error('%ThisAnalysisTypeIsNotApplicable')"/>
  </xsl:if>
  <xsl:copy-of select="document('config://analysis_type/include/require_connection.xsl?connections=group_generic')"/>
 </prerequisites>
 <knobs xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:variable name="commonKnobs" select="document('config://analysis_type/include/knobs.xsl')"/>
  <enumKnob id="cpuTimeColoring" displayName="%CPUTimeColoring" cliName="cpu-time-coloring" boolean:visible="false">
   <description>%CPUTimeColoringDescription</description>
   <values>
    <value displayName="%None" cliName="none">none</value>
    <value displayName="%CPUUsage" cliName="cpu-usage">cpuUsage</value>
    <value displayName="%ThreadConcurrency" cliName="thread-concurrency">threadConcurrency</value>
    <defaultValue>none</defaultValue>
   </values>
  </enumKnob>
  <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
   <defaultValue>%HotspotsByCPUUsageViewpointName</defaultValue>
  </stringKnob>
  <xsl:copy-of select="$commonKnobs//knobs/intKnob[@id='samplingInterval']"/>
  <booleanKnob id="userTasksEventsCountersCollection" displayName="%UserTasksEventsCountersCollection" boolean:visible="true" cliName="enable-user-tasks">
   <description>%UserTasksEventsCountersCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <doubleKnob id="slowGoodFrameThreshold" displayName="%SlowGoodFrameThreshold" cliName="slow-frames-threshold" boolean:visible="false">
   <description>%SlowGoodFrameThresholdDescription</description>
   <double:min>0.01</double:min>
   <double:max>1024000</double:max>
   <double:defaultValue>40</double:defaultValue>
  </doubleKnob>
  <doubleKnob id="goodFastFrameThreshold" displayName="%GoodFastFrameThreshold" cliName="fast-frames-threshold" boolean:visible="false">
   <description>%GoodFastFrameThresholdDescription</description>
   <double:min>0.01</double:min>
   <double:max>1024000</double:max>
   <double:defaultValue>100</double:defaultValue>
  </doubleKnob>
  <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='analyzeOpenMPRegions']"/>
 </knobs>
 <analysis xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:if test="not(exsl:ctx('isTPSSAvailable', 0)) and not(exsl:ctx('isPtraceAvailable', 0))">
   <xsl:value-of select="exsl:error('%RunssBasicHotspotsNotSupported')"/>
  </xsl:if>
  <xsl:if test="exsl:ctx('isPtraceScopeLimited', 0)">
   <xsl:value-of select="exsl:error('%RunssPtraceScopeLimited')"/>
  </xsl:if>
  <collector id="runss">
   <collectorKnob knob="collectSamplesMode">stack</collectorKnob>
   <collectorKnob knob="samplingInterval">
    <xsl:copy-of select="exsl:ctx('samplingInterval', 10)"/>
   </collectorKnob>
   <collectorKnob knob="collectUserTasksEventsCountersMode">
    <xsl:copy-of select="exsl:ctx('userTasksEventsCountersCollection', 0)"/>
   </collectorKnob>
   <xsl:if test="exsl:ctx('isPytraceAvailable', 0)">
    <xsl:choose>
     <xsl:when test="exsl:ctx('targetOS', '') = 'Windows'">
      <collectorKnob knob="mrteType">java,dotnet,python</collectorKnob>
     </xsl:when>
     <xsl:when test="exsl:ctx('targetOS', '') = 'Linux'">
      <collectorKnob knob="mrteType">java,python</collectorKnob>
     </xsl:when>
    </xsl:choose>
   </xsl:if>
   <collectorKnob knob="collectOpenMPRegions">
    <xsl:value-of select="exsl:ctx('analyzeOpenMPRegions', 0)"/>
   </collectorKnob>
  </collector>
 </analysis>
</bag>
